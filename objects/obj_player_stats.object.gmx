<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the player's stats
hp = 5;
max_hp = hp;
stamina = 10;
max_stamina = stamina;
level = 1;
expr = 0;
expr_to_next = 3;
attack = 0;
weapon = instance_create(0, 0, obj_weapon_stats_sword);
weapon_sprite = spr_sword;
pause_screenshot = noone;
gold = 0;
loot = undefined;

// Get player's xstart and ystart
if (instance_exists(obj_player)) {
    player_xstart = obj_player.x;
    player_ystart = obj_player.y;
} else {
    player_xstart = 0;
    player_ystart = 0;
}

// Save previous room
previous_room = room;

room_start_action = NEW_ROOM;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stamina regeneration
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control the stats
if (hp &lt; 0) {
    hp = 0;
}

// Level up
if (expr &gt;= expr_to_next) {
    level += 1;
    expr = expr - expr_to_next;
    expr_to_next *= 2;
    max_hp += 2;
    hp = max_hp;
    max_stamina += 3;
    stamina = max_stamina;   
    attack += 1;
}

// regen stamina
if (stamina &lt; max_stamina &amp;&amp; alarm[0] == -1) {
    ++stamina;
}

// Pause the game
if (obj_input.pause_key) {
    if (room != rm_pause) {
        // hide the hero
        if (instance_exists(obj_player)) {
            obj_player.persistent = false;
        }
        
        // stash previous room &amp; screenshot it    
        previous_room = room;
        room_persistent = true;
        var width = surface_get_width(application_surface);
        var height = surface_get_height(application_surface);
        pause_screenshot = sprite_create_from_surface(application_surface, 0, 0, width, height, false, false, 0, 0);
        
        // Show pause menu
        room_goto(rm_pause);
    } else {
        room_goto(previous_room);
    }
    
    obj_input.pause_key = false;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Room start cleanup
//Persist character
if (instance_exists(obj_player)) {
    obj_player.persistent = true;
}

// remove pause screenshot sprite
if (room != rm_pause &amp;&amp; pause_screenshot != noone) {
    sprite_delete(pause_screenshot);
    pause_screenshot = noone;
}

// Remember the player's start position
if (room != rm_pause) {
    switch(room_start_action) {
        case RETURN:
            break;
        case NEW_ROOM:
        default:
            if (instance_exists(obj_player)) {
                player_xstart = obj_player.x;
                player_ystart = obj_player.y;
            }
            break;
        case LOAD:
            scr_load_game();
            break;
    }
    
    room_persistent = false;
    room_start_action = NEW_ROOM;
}   



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the stats
// only draw background if not paused
if (room != rm_pause) {
    draw_set_alpha(.4);
    draw_rectangle_colour(0, 0, 192, 96, c_black, c_black, c_black, c_black, false);
    draw_set_alpha(1);
}

draw_set_color(c_white);
draw_text(32, 16, "HP: " + string(hp) + "/" + string(max_hp));
draw_text(32, 32, "STAMINA: " + string(stamina) + "/" + string(max_stamina));
draw_text(32, 48, "GOLD: " + string(gold));
draw_text(32, 64, "LEVEL: " + string(level));


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
