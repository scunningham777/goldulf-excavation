<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize the pause menu
title = "Game Paused";

option[0] = "Return";
option[1] = "Save";
option[2] = "Load";
option[3] = "Quit";

//Menu index
menu_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Menu alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control the menu
if (alarm[0] &lt;= 0) {
    if (obj_input.down_key || obj_input.yaxis &gt; .5) {
        if (menu_index &lt; array_length_1d(option) - 1) {
            ++menu_index;
        } else {
            menu_index = 0;
        }
        alarm[0] = room_speed / 6;
    }
    if (obj_input.up_key || obj_input.yaxis &lt; -.5) {
        if (menu_index &gt; 0) {
            --menu_index;
        } else {
            menu_index = array_length_1d(option) - 1;
        }
        alarm[0] = room_speed / 6;
    }
    
    if (obj_input.menu_select_key) {
        switch (menu_index) {
            case 0:
                obj_player_stats.room_start_action = RETURN;
                room_goto(obj_player_stats.previous_room);
                break;
            case 1:
                scr_save_game();
                break;
            case 2:
                obj_player_stats.room_start_action = LOAD;
                room_goto(obj_player_stats.previous_room);
                break;
            case 3:
                game_end();
                break;
            default:
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw the menu

//Draw background sprite
if (instance_exists(obj_player_stats)) {
    draw_sprite_ext(obj_player_stats.pause_screenshot, 0, 0, 0, 1, 1, 0, c_white, .4);
}

//Draw menu setup
var xx = display_get_gui_width() / 2;
var yy = display_get_gui_height() / 2;

//Draw backdrop
var bg_x_offset = xx / 2;
var bg_y_offset = yy / 2;
var bg_width = xx;
var bg_height = yy;
draw_set_alpha(.4);
draw_rectangle_colour(bg_x_offset, bg_y_offset, bg_x_offset + bg_width, bg_y_offset + bg_height, c_black, c_black, c_black, c_black, false);
draw_set_alpha(1);


//Draw actual menu
draw_set_halign(fa_center);
draw_text(xx, bg_y_offset + 32, title);

for (var i = 0; i &lt; array_length_1d(option); i++) {
    draw_set_color(c_gray);
    if (i == menu_index) {
        draw_set_color(c_white);
    }
    draw_text(xx, bg_y_offset + 96 + (i * 32), option[i]);
}

draw_set_color(c_white);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
