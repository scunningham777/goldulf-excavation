<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_damage</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize damage object
damage = 1;
knockback = 10;
creator = noone;
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy the damage object
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lifeform_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage all lifeforms
if (other.id != creator) {
    other.hp -= damage;
    
    //Apply the knockback
    if (instance_exists(creator)) {
        var dir = point_direction(creator.x, creator.y, other.x, other.y);
    } else {
        var dir = point_direction(x, y, other.x, other.y);
    }
    var xforce = lengthdir_x(knockback, dir);
    var yforce = lengthdir_y(knockback, dir);
    with(other) {
        physics_apply_impulse(x, y, xforce, yforce);
    }

    var effect = instance_create(other.x, other.y, obj_particle_ball);
    var recipient = other;
    var color1 = other.damage_color1;
    var color_type = other.damage_color_type;
    with (effect) {
        if (recipient.damage_color_type == COLOR_BLEND) {
            part_type_color_mix(spark, recipient.damage_color1, recipient.damage_color2);
        } else if (recipient.damage_color_type == COLOR_TRANSITION) {
            part_type_color2(spark, recipient.damage_color1, recipient.damage_color2);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hero">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage player
if (other.id != creator) {
    obj_hero_stats.hp -= damage;
    audio_play_sound(snd_player_takes_damage, 9, false);
    
    //Apply the knockback
    if (instance_exists(creator)) {
        var dir = point_direction(creator.x, creator.y, other.x, other.y);
    } else {
        var dir = point_direction(x, y, other.x, other.y);
    }
    var xforce = lengthdir_x(knockback, dir);
    var yforce = lengthdir_y(knockback, dir);
    with(other) {
        physics_apply_impulse(x, y, xforce, yforce);
    }

    var effect = instance_create(other.x, other.y, obj_particle_ball);
    var recipient = other;
    var color1 = other.damage_color1;
    var color_type = other.damage_color_type;
    with (effect) {
        if (recipient.damage_color_type == COLOR_BLEND) {
            part_type_color_mix(spark, recipient.damage_color1, recipient.damage_color2);
        } else if (recipient.damage_color_type == COLOR_TRANSITION) {
            part_type_color2(spark, recipient.damage_color1, recipient.damage_color2);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,12</point>
    <point>12,12</point>
  </PhysicsShapePoints>
</object>
